                <!--=========== BEGIN SECTION implementació 2 ================-->    
                <section id="slc-toDo2" class="tasca section">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class= "headSlide">
                                     <h2 >Tasques a realitzar-Implementació II</h2>
                                     <h3 > <span class="tascaTitle">Tasca</span> Implementació del menú</h3>
                                 </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class=bodySlide>
                                    <p>Sembla que ara si està tot a punt per poder començar a implementar les funcions de l'esquelet que vau esquematitzar a l'activitat A503. Recordeu que les aplicacions escrites en JAVA inicien el flux d'execució a la funció <em>main</em>, la qual, d'acord amb la convenció que hem introduït aquest semestre, crearà una instància de la classe que representa l'aplicació i l'inicialitzarà. Això implica crear l'estructura de dades principal, demanar a l'usuari la tarifa amb la que ha de treballar, i seguidament, mantenir el flux en el menú principal de l'aplicació fins que l'usuari demani sortir. Cada opció del menú, exceptuant la demanada per finalitzar l'aplicació, es correspondrà amb una tasca, la qual, a la vegada, s'identificarà amb una funció de l'esquelet. Enumereu les diferents opcions i prepareu-vos per definir el menú de l'aplicació fent servir les funcions adients de la biblioteca <em>BibliotecaInterficieUsuari</em>, que vau implementar a l'activitat A504. No us oblideu de la discussió que vau tenir en el fòrum de l'activitat A503 referent a la interfície, el control i el tractament de dades dels menús. Refresqueu sobretot el tema del control i la interfície.</p>
                                    <p>Dissenyeu i implementeu la interfície del menú del projecte seguint les directives referents al disseny d'interfícies que hàgiu extret dels fòrums d'aquesta mateixa activitat. Implementeu també el control que identifiqui la opció escollida per l'usuari i seleccioni, a partir d'aquesta, la tasca a executar. No cal que codifiqueu encara les tasques, limiteu-vos a implementar el menú i el control.</p>
                                    <p>Per tal de poder provar la vostra codificació, implementeu també la funció <em>main</em>, la funció <em>inici</em> i les que necessiteu per fer arribar el flux al menú visualitzar les opcions per la pantalla, seleccionar-ne una via teclat i enviar-la al control. </p>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-clue="#slc-toDo2-clue1">
                                        Pista 1
                                    </button>                                        
                                    <div id="slc-toDo2-clue1" class="iocClue hidden">
                                        <h2>Pista 1</h2>
                                        <p>Recordeu que hi ha d'haver un correspondència entre les opcions del menú i les tasque que vau planificar a l'activitat A503 i que aproximadament seran unes 6 funcionalitats, a banda de l'opció de sortir de l'aplicació.</p>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-warning btn-lg  btn-3d toggle-off" 
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-advice="#slc-toDo2-advice1">
                                        Consell 1
                                    </button>                                        
                                    <div id="slc-toDo2-advice1" class="iocClue hidden">
                                        <h2>Consell 1</h2>
                                        <p>De moment en el control, per comprovar que la opció arriba correctament, poseu una línia amb un <em>System.out.println</em> que us ajudi a veure la opció arribada, Més endavant quan codifiqueu les tasques i li doneu la funcionalitat al control, ja li traureu la línia.</p>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-warning btn-lg  btn-3d toggle-off" 
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-advice="#slc-toDo2-advice2">
                                        Consell 2
                                    </button>                                        
                                    <div id="slc-toDo2-advice2" class="iocClue hidden">
                                        <h2>Consell 2</h2>
                                        <p>No us oblideu de instanciar l'estructura de dades principals i passar la instància de crida en crida, si no voleu trobar-vos amb la sorpresa de disseminar per la vostra aplicació armaris buits (sense dades) i per tant sense utilitat. Demanar la tarifa per inicial, abans de mostrar el menú, així deixareu la inicialització de l''aplicació totalment acabada.</p>
                                      <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-warning btn-lg  btn-3d toggle-off" 
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-advice="#slc-toDo2-advice3">
                                        Consell 3
                                    </button>                                        
                                    <div id="slc-toDo2-advice3" class="iocAdvice hidden">
                                        <p>Ja hem vist que les estructures de dades, cal instanciar-les una vegada i anar-les passant per paràmetre, de funció, en funció. També hem vist que les classes que només contenen codi, podem instanciar-les tantes vegades com necessitem. No caldrà doncs que passem les seves instàncies per paràmetre, podem crear-les dins de cada funció de forma local. Per exemple, suposant que disposem d'una biblioteca per generar interfícies anomenada <em>InterficieConsola</em> i que l'estructura de dades és EstructuraDades, per poder-les usar a la funció següent, caldrà passar l'estructura per paràmetre i instanciar la interfície com a variable local:</p>
                                        <pre><code class="java">
void funcioExemple(EstructuraDades dades){
    InterficieConsola interficie = new InterficieConsola();
    
    dades.valor = interficie.entrarEnter("Entra el valor actual?");
    
    dades.resultat = calcularResultat(dades);
    
    interfie.mostrarResultat("El resultat obtingut és: " + dades.resultat);
}
                                        </code></pre>
                                        <p>Això a vegades, pot resultar una mica tediós, ja que contínuament cal estar instanciant classes de codi. És possible, però, evitar-ho declarant un única instancia de cada classe contenint només codi, de tipus global, així podrem utilitzar la instancia en qualsevol funció de la classe on es trobi declarada, sense haver de reiterar constantment la mateixa instanciació.</p>
                                        <p>Recordeu, que hem insistit àrduament, dient que eviteu sempre que pugueu l'ús de variables globals. Ara bé, en aquests casos, el fet que la classe instanciada de forma global no contingui dades, fa que sigui indiferent si la instancia és global o local, ja que només la necessitem per executar el codi de les seves funcions.</p>
                                        <p>Aquesta pràctica, però, no està exempta de perills. Un error molt típic de principiant, consisteix en crear instancies globals en dues classes les quals es necessiten una a l'altra. És a dir la primera fa servir funcions de la segona i aquesta, a la vegada fa servir funcions de la primera:</p>
                                        <pre><code class="java">
/*Classe ClassePrincipal que en una de les seves funcions necessita un instància de ClassePrimera.
  La classe  ClassePrincipal està implementada en el fitxer ClassePrincipal.java */
public class ClassePrincipal{
    ...
    public void prova(){
        ClassePrimera codiDeProva = new ClassePrimera()
        
        codiDePRova.executar();
    }
}
                                        
/*Classe ClassePrimera implementada en el fitxer ClassePrimera.java */
public class ClassePrimera{
    public ClasseSegona codiNecessariDeCSegona = new ClasseSegona();
    
    ...
}

/*Classe ClasseSegona implementada en el fitxer ClasseSegona.java */
public class ClasseSegona{
    public ClassePrimera codiNecessariDeCPrimera = new ClassePrimera();
    
    ...
}
                                        </code></pre>
                                        <p>En crear un instància d'una classe, simultàniament, es creen també totes les instancies de les seves variables globals. Com podeu suposar, això és realment un problema per el codi anterior, ja que mai arribaria a executar-se la instrucció <em>codiDePRova.executar();</em>, doncs en intentar crear la instància de ClassePrimera (des de la classe ClassePrincipal), obtindríem un error de desbordament de pila, degut a que la instancia creada, té una variable global de tipus ClasseSegona. Això farà que dins de la instancia de la variable codiDeProva, es crei un instancia de tipus ClasseSegona  (<em>codiDeProva.codiNecessariDeCSegona</em>). Ara bé, la classe ClasseSegona conté també una variable global de tipus ClassePrimera. D'acord amb el que hem explicat, dins la instancia de la classe ClasseSegona es crearà un nova instancia de ClassePrimera que serà diferent a la original, perquè aquesta es troba dins de  <em>codiDeProva.codiNecessariDeCSegona.codiNecessariDeCPrimera</em>. La nova instància contindrà un nova versió de  ClasseSegona i aquesta una nova de la classe ClassePrimera:  <em>codiDeProva.codiNecessariDeCSegona.codiNecessariDeCPrimera.codiNecessariDeCSegona.codiNecessariDeCPrimera</em>. Entrarem així en un bucle infinit que anirà creant instàncies fins esgotar totalment la memòria de l'ordinador, moment en el que obtindrem l'error de desbordament.</p>
                                        <p>Si encara no controleu massa la instanciació de classes, eviteu l'ús de variables globals i malgrat que us representi una mica més de feina, useu només instàncies de tipus local.</p>
                                       <p>D'altra banda, tingueu també present, que les biblioteques amb funcions estàtiques no s'han d'instanciar. Les seves funcions es poden cridar directament anteposant el nom de la classe seguit d'un punt:</p> 
                                       <pre><code class="java">
public class ClassePrincipal{
    ...
    public void prova(){
        BibliotecaEstatica.executarFuncioEstatica();
    }
    
    ...
}
                                       </code></pre>
                                    </div>
                                </div> 
                            </div>
                        </div>
                    </div>
                </section>
                <!--=========== END SECTION implementació 2 ================-->    
                <!--=========== BEGIN SECTION implementació 2 ================-->    
                <section id="slc-toDo3" class="tasca section">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class= "headSlide">
                                     <h2 >Tasques a realitzar-Implementació II</h2>
                                     <h3 > <span class="tascaTitle">Tasca</span> Implementació de les tasques</h3>
                                 </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class=bodySlide>
                                    <p>Un cop implementat el menú, comenceu la codificació de les tasques. Recordeu que les tasques són funcionalitats complertes i per tant, haureu de contemplar per cada una, la interfície d'usuari necessària per demanar les dades inicials que facin falta i mostrar els resultats obtinguts. Recupereu doncs, els criteris de qualitat que heu analitzat a la <a target='_blank' href="#slc-discussion__slc-discussion24">secció de fòrums</a> i planifiqueu cada una de les pantalles de les tasques. Recordeu que cada una d'elles hauria de disposar de títols específics que donin informació a l'usuari, de la pantalla on es troba. Planifiqueu la informació que caldrà donar a l'usuari a fi que sàpiga sempre el que a de fer i intenteu estandarditzar les pantalla tant com us sigui possible a fi d'homogeneïtzar-les i facilitar els seu aprenentatge.</p>
                                    <p>Ajudeu-vos de la biblioteca que heu creat per generar interfícies d'usuaris. Segur que us pot estalviar molt feina i us evitarà molts, molts errors.</p>
                                    <p>Repasseu també les altres biblioteques que heu anat construint fins avui a la classe <em>Utils</em> i les funcions que heu agrupat al gestor de dades (classe GestorDadesCamping), segur que us resultaran útils per codificar ràpidament el tractament de dades de la majoria de les tasques.</p>
                                    <p>Si us fixeu bé, veureu que la majoria de funcions corresponents al tractament de dades, les teniu ja implementades en el gestor de dades. Per tant, serà el disseny de la interfície d'usuari el que us traurà més temps, és normal ja que la majoria de tractaments de dades els resoldreu amb una sola crida a la funció corresponent del gestor. No us oblideu d'aplicar els criteris de qualitat i feu servir la demanda de dades per establir la seqüencialitat que donarà coherència a l'aplicació.</p>
                                    
                                    
                                    
                                    <!--p>En cas que decidiu seguir el consell de centrar-vos aquí només en la interfície, us pot resultar útil, malgrat l'execució sigui nul·la, incorporar les crides de les funcions de tractament, de forma que després ja no calgui fer cap modificació i n'hi hagi prou només, implementant les funcions que manquin, per acabar el projecte. Per exemple, imaginem un aplicació que disposa d'una tasca que permet actualitzar una sèrie de premis per els participants i posteriorment assignar-los la remuneració pertinent al premi. En aquest cas la nostra implementació podria ser: </p>
                                    <pre><code class="java">
...
    void pantallaActualitzarPremis(DadesCicliCat dades) {
        boolean ret;
        //Pantalla per actualitzar premis i remuneracions
        interficieUsuari.mostrarTitols(TITOL_PANTALLA, "Actualització de les remuneracions i els premis");
        
        mostrarMissatgeIniciActualitzacioPremis();
        
        actualitzarPremis(dades);
        ret = actualitzacioRemuneracions(dades);
        
        mostrarMissatgeFinalActualitzacioPremis(ret);
    }
 
 ...
                                    </code></pre>
                                    <p>Fixeu-vos, com la funció <em>pantallaActualitzarPremis</em> (corresponent a una tasca), en implementar-la, posem totes les línies de codi necessàries per tal que funcioni quan totes les funcions es trobin implementades. Tot i així sabem que les funcions <em>actualitzarPremis</em> i <em>actualitzacioRemuneracions</em> estaran buides i per tant la actualització no es produirà, però no per això deixem de fer la crida. En canvi, la resta de funcions <em>mostrarMissatgeIniciActualitzacioPremis</em> i <em>mostrarMissatgeFinalActualitzacioPremis</em> si que els haurem d'implementar i si que s'executaran. Tampoc hi haurà cap problema en usar funcions de biblioteca (com <em>mostrarTitols</em>), perquè ja les tenim implementades. D'aquesta manera, podreu executar l'aplicació i comprovar fàcilment si les accions implementades són correctes.</p>
                                    <p>En cas que alguna funció de tractament, hagi de retornar alguna dada, podeu forçar el retorn d'un valor qualsevol dins la funció buida, per tal de d'evitar un error i recollir un valor vàlid a la funció que estiguem implementant. A l'exemple <em>pantallaActualitzarPremis</em>, s'espera que la funció <em>actualitzacioRemuneracions</em> retorni un valor lògic. Per tant a la classe la nostra funció estarà declarada com segueix:</p>
                                    <pre><code class="java">
...
    boolean actualitzacioRemuneracions(DadesCicliCat dades) {
        //A IMPLEMENTAR
        return false;
    }
 ...
                                    </code></pre>
                                    <p>D'aquesta manera, evitarem l'error i podrem fer la crida igual que si estès realment ben implementada. A més, canviant el valor de retorn, podrem provar diverses situacions, per veure si la nostra interfície respon adequadament a cada una d'elles.</p>
                                    <p>Tot i així, si haver de fer la crida a una funció encara no implementada us causés algun problema, no hi perdeu gaire temps, ja afinareu al final, quan la implementeu. De moment aquí, comenteu la crida per tal que no doni error o escriviu un comentari en el seu lloc, a mode de recordatori, i continueu amb la resta de la implementació.</p-->
                                    <p>Si durant la codificació us adoneu que us fan falta més funcions de les que vau preveure en la fase de disseny, ja sigui a les classes de l'aplicació o en alguna biblioteca (Utils, interficie d'usuari, etc.), no us preocupeu, podeu implementar-les a mida que les aneu necessitant de manera que tingueu sempre les funcions disponibles per a ser utilitzades en les següents ocasions.</p>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue1">
                                        Pista 1
                                    </button>                                        
                                    <div id="slc-toDo3-clue1" class="iocClue hidden">
                                        <h2>Pista 1</h2>
                                        <p>D'acord amb els criteris de qualitat i el que heu anat deduint en els diferents fòrums un possible esquema per a la implementació de les tasques podria ser el següent exemple.</p>
                                        <pre><code class="java">
...
    void tascaFerAlgunaCosa(DadesAplicacio dades) {
        InterficieUsuari interficieUsuari = new InterficieUsuari();
        int dadaInicial1;
        ...
        String  dadaInicialN;
        int error;
        
        //Pantalla per fer alguna cosa
        interficieUsuari.mostrarTitol("La cosa a fer");
        
        //obtenir dades inicials
        dadaInicial1 = interficieUsuari.entrarEnter("Us demanem que ....");
        
        ...
        
        dataInicialN = interficieUsuari.entrarCadena("Us demanem que ....");
        
        //fer el tractament específic
        error = ferElTractamentPerAlguanCosa(dades, dadaInicial1, ..., dadaInicialN);
        
        //mostrar els resultats del tractament
        if(error==0){
            //tot ha anat correcte. La funció cridada hauria de mostrar els resultats (si cal mostrar-los) i indicar que tot ha anat correctament.
            mostrarMissatgeResultatsPerAlgunaCosa(dades);
        }else{
            //s'ha produït un error. La funció cridada hauria d'analitzar l'error i informar a l'usuari de la raó
            mostrarErrorPerAlgunaCosa(dades, error);
        }
    }
 
 ...
                                        </code></pre>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue2">
                                        Pista 2
                                    </button>                                        
                                    <div id="slc-toDo3-clue2" class="iocClue hidden">
                                        <h2>Pista 2</h2>
                                        <p>En el cas de que s'hagin de mostrar llistes o detalls de dades per la pantalla, recordeu-vos de mantenir les dades visibles fins que l'usuari ho indiqui, amb una acció del teclat. Això us permetrà seqüenciar l'aplicació respectant el ritme de l'usuari. Per exemple una possible sortida a la  tasca que mostra les parcel·les buides podria ser:</p>
                                        <pre class="iocexample single mono">
********************************************************************************
**                        LLista de parcel·les buides                        **
********************************************************************************

Data:  24/03/2017 Hora:  20:19

--------------------------------------------------------------------------------
Els números de les parcel·les buides són:

--------------------------------------------------------------------------------
           0,            1,            2,            3,            4
           5,            6,            7,            8,            9
          10,           11,           12,           13,           14

--------------------------------------------------------------------------------
prem 'Entrar' per a continuar
                                        </pre>
                                        <p>Així es mantindria la llista a la pantalla fins que l'usuari premés la tecla ENTRAR, moment en que s'abandonaria la llista (desplaçant el text un nombre suficient de files perquè desaparegui de la zona visible) i es mostraria de nou el menú.</p>
                                        <p>D'altre banda, per les accions que requereixen que l'usuari vagi entrant dades, com per exemple el registre d'entrada de clients, n'hi haurà prou d'anar mostrant pregunta a pregunta, i esperant que l'usuari contesti fins arribar a la darrera, moment en que es procedirà al registre i s'informarà del resultat de l'acció.</p>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue3">
                                        Pista 3
                                    </button>                                        
                                    <div id="slc-toDo3-clue3" class="iocClue hidden">
                                        <h2>Pista 3</h2>
                                        <p>Una seqüenciació que cal esmentar, per la seva complexitat, és la corresponent a la tasca de facturació, ja que a més de demanar les dades inicials per a fer el càlculs (número de la parcel·la i data de sortida), un cop calculats i mostrats els resultats, caldrà saber si el client abandona la parcel·la de forma immediata i en cas negatiu si cal marcar o no la parcel·la per controlar-la.</p>
                                        <p>Un possible solució podria ser:</p>
                                        <pre class="iocexample single mono">
********************************************************************************
**                 Registre de facturació. Sortida de clients                 **
********************************************************************************
Indica la parcel·la on està instal·lat el client:
                                        </pre>
                                        <p>Inicialment es demana la parcel·la a facturar</p>
                                        <pre class="iocexample single mono">
********************************************************************************
**                 Registre de facturació. Sortida de clients                 **
********************************************************************************
Indica la parcel·la on està instal·lat el client: 5
Indica la data de sortida del client:                                        
                                        </pre>
                                        <p>Seguidament es demana la data de sortida</p>
                                        <pre class="iocexample single mono">
********************************************************************************
**                 Registre de facturació. Sortida de clients                 **
********************************************************************************
Indica la parcel·la on està instal·lat el client: 5
Indica la data de sortida del client:30/04/2014
Nombre de dies a facturar:   5
----------------------------------------------------------------------
conceptes a facturar    preu unitari per dia    total
----------------------------------------------------------------------
Nombre d'adults:  3            4,80                72,00
Nombre de menors:  2           3,75                37,50
Cotxe                          4,00                20,00
Electricitat                   5,00                25,00
Aigua                          3,00                15,00
======================================================================
                                 Total a pagar:   169,50
Voleu procedir a deslliurar la parcel·la facturada (s/N)?
                                        </pre>
                                        <p>Un cop introduïda la data es mostra la factura per la pantalla i es demana si l'usuari abandonarà la parcel·la.</p>
                                        <p>En cas afirmatiu es procedirà a buidar la parcel·la i es tronarà al menú, però en cas negatiu caldrà preguntar si l'usuari paga la parcel·la i per tant l''abandonarà en un temps breu o si pel contrari es tractava d'una simulació i realment l'usuari no se'n va i per tant no caldrà fer res.</p>
                                        <p>Noteu però que en qualsevol cas, degut a la complexitat, caldrà informar a l'usuari de quina ha estat l'elecció i si la parcel·la ha quedat deslliurada, marcada o continua ocupada. Per exemple un possible missatge seria:</p>
                                        <pre class="iocexample single mono">
********************************************************************************
**                                   ALERTA                                   **
********************************************************************************
Parcel·la no deslliurada ni marcada per controlar.
La parcel·la continua ocupada
********************************************************************************
                                        </pre>
                                        <p>O bé:</p>
                                        <pre class="iocexample single mono">
--------------------------------------------------------------------------------
Parcel·la deslliurada correctament
--------------------------------------------------------------------------------
                                        </pre>
                                        <p>.</p>
                                    </div>
                                     <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue4">
                                        Pista 4
                                    </button>                                        
                                    <div id="slc-toDo3-clue4" class="iocClue hidden">
                                        <h2>Pista 4</h2>
                                        <p>Si durant la implementació us adoneu que, algunes funcions es codifiquen amb només una única crida a una biblioteca, és aconsellable eliminar la funció i cridar directament la biblioteca, des de la tasca original, on s'havia de fer la crida a l'acció.</p>
                                    </div>
                                </div> 
                            </div>
                        </div>
                    </div>
                </section>
                <!--=========== END SECTION implementació 2 ================-->    
                <!--=========== BEGIN SECTION impl 7 ================-->    
                <section id="slc-toDo7" class="tasca section">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class= "headSlide">
                                     <h2 >Tasques a realitzar-Implementació II</h2>
                                     <h3 > <span class="tascaTitle">Tasca</span> Valoració de la implementació</h3>
                                 </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class=bodySlide>
                                    <p>Abans de lliurar el projecte us recomanem que feu proves exhaustives per valorar el funcionament de l'aplicació i la seva qualitat.</p>
                                    <p>Les proves funcionals haurien de consistir en provar el bon funcionament de cada una de les funcionalitats (tasques) en que es divideix l'aplicació, aplicant els següents criteris, que d'altra banda seran també els utilitzats per fer la correcció i la qualificació d'acord amb la ponderació expressada a continuació:</p>
                                    <ul>
                                        <li>
                                            Registre de clients (0,35)
                                            <ul>
                                                <li>Complerta (100%): S'aconsegueix enregistrar correctament i de forma coherent a l'estructura de dades dissenyada, les dades de contractació dels serveis del càmping. És fa la verificació de la parcel·la abans de l'enregistrament assegurant que mai s'aixafaran, per error, les dades d'un registre existent. Es fa la verificació del format de la data.</li>
                                                <li>Incomplerta (50%): Les dades s'emmagatzemen correctament, però no es verifica la parcel·la ni la data.</li>
                                                <li>Deficient (0%): Hi ha pèrdua de dades total o parcial. Es perd la coherència a l'estructura de dades un cop afegit el registre.</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Assignació de la tarifa de tarifa (0,3):
                                            <ul>
                                                <li>Complerta (100%): Abans de començar l'aplicació es es demana a l'usuari la tarifa a aplicar i un cop assignada no es tornarà a preguntar en cap altre gestió a excepció del canvi de tarifa demanat pel mateix usuari (opció del menú). En qualsevol dels dos casos, la tarifa escollida s'aplicarà en els següents processos de facturació fins que es troni a sol·licitar un canvi de tarifa.</li>
                                                <li>Incomplerta (50%): Inicialment es demana la tarifa i també es contempla el procés de canvi de tarifa, però en aquest procés aquesta no s'emmagatzema o si es fa, no s'utilitza el valor guardat en el càlcul de la facturació del clients. O bé, no es fa la demanda inicial de tarifa i en intentar facturar no es poden realitzar els càlculs o els càlculs apliquen un tarifa per defecte.</li>
                                                <li>Deficient (0%): No es contempla el canvi de tarifa ja sigui perquè només se n'aplica una o perquè inicialment es deixa escollir però no es permet el canvi.</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Facturació d'un client (0,65):
                                            <ul>
                                                <li>Complerta (100%): Es calculen correctament els imports d'acord amb els dies passats entre la data d'entrada i la data de sortida sol·licitada durant aquest procés. Els càlculs es donen detalls per els diferents conceptes. La visualització dels càlculs no implica l'abandonament de la parcel·la. L'usuari podrà decidir si el procés era només un simulació i la parcel·la es manté ocupada amb els mateixos criteris, si el client paga però la parcel·la es manté ocupada fins el dia següent i es procedirà a marcar-la com a parcel·la a controlar, o si el client abandona la parcel·la de forma imminent i es cal procedir a desocupar la parcel·la.</li>
                                                <li>Poc complerta (65%): Es compleixen tots els ítems de a opció "complerta" a excepció d'un que no està contemplat o no funciona adequadament.</li>
                                                <li>incomplerta (35%): Es compleixen tots els ítems de a opció "complerta" a excepció de 2 o 3 que no estan contemplats o no funcionen adequadament.</li>
                                                <li>Deficient (0%): Hi ha més de 3 dels ítems contemplats a la opció "complerta" que no estan contemplats o no funcionen correctament.</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Alliberament de les parcel·les ocupades(0,35):
                                            <ul>
                                                <li>Complerta (100%): L'alliberament implica que la parcel·la podrà identificar-se com a lliure durant el llistat de parcel·les buides i també per ser assignada a nous clients, i que mai suposarà un sobrecost quan sigui ocupada de nou.</li>
                                                <li>Incomplerta (50%): Un dels ítems de la opció complerta no funciona correctament o no està implementat.</li>
                                                <li>Deficient (0%): No funciona cap dels ítems de l opció "complerta" o no estan implementats .</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Marcatge de parcel·les a controlar(0,15):
                                            <ul>
                                                <li>Complerta (100%): S'aconsegueix marcar la parcel·la coherentment amb l'estructura de dades de forma que pugui ser reconeguda en llistar les parcel·les a controlar.</li>
                                                <li>Deficient (0%): No s'aconsegueix marcar la parcel·la i per tant no apareix als llistats de parcel·les a controlar.</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Llistat de parcel·les buides i de parcel·les a controlar (0,3 per llistat. Total 0,6):
                                            <ul>
                                                <li>Complerta (100%): S'aconsegueix llistar correctament i amb el format adient, totes les parcel·les que compleixin la condició per formar part del llistat.</li>
                                                <li>Incomplerta (50%): S'aconsegueix llistar correctament  només un dels llistat o bé ambdós però amb deficiències. Per exemple amb un nombre erroni de parcel·les o amb un format inadequat i difícil de llegir.</li>
                                                <li>Deficient (0%): No s'aconsegueix visualitzar cap dels dos llistats</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Altres aspectes a valorar
                                            <ul>
                                                <li>
                                                    Inicialització de l'aplicació i les dades (0,3):
                                                    <ul>
                                                        <li>Complerta (100%): Durant la inicialització es crea la instancia de l'estructura de dades, la qual es farà servir per mantenir les dades de tota l'aplicació, també es demana la tarifa inicial i es mostra el menú principal.</li>
                                                        <li>Deficient (0%): No s'implementen tots els ítem indicats a la opció "complerta".</li>
                                                    </ul>
                                                </li>
                                                <li>
                                                    Estructura de dades adequada (0,3)
                                                    <ul>
                                                        <li>Complerta (100%): L'estructura de dades es capaç de suportar l'emmagatzematge de les dades que permetin complir tots els requeriments que l'aplicació necessita.</li>
                                                        <li>Incomplerta (50%): L'estructura de dades es capaç de suportar l'emmagatzematge de les dades que permetin complir tots els requeriments que l'aplicació necessita a excepció d'un.</li>
                                                        <li>Deficient (0%): L'estructura de dades no es capaç de suportar l'emmagatzematge de les dades que permetin complir els requeriments que l'aplicació necessita.</li>
                                                    </ul>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>>
                                    <p>A banda de les proves funcionals, també caldria fer una anàlisi dels criteris de qualitat de més avall, els quals també s'usaran per a calcular la qualificació d'acord amb la ponderació i els criteris definits:</p>
                                    <ul>
                                        <li>
                                            Llegibilitat del codi (2,5):
                                            <ul>
                                                <li>Correcta (100%): Es fan servir constants de forma habitual en lloc de valors literals.<br />
Els noms de les classes, dels mètodes i les variables són descriptius de manera que és molt intuïtiu saber per a què es fan servir.<br/>
El codi està  ben indentat.<br/>
Les estructures de dades ajuden a interpretar el flux de les dades durant l'execució.
                                            </li>
                                            <li>Millorable (50%):
Es fan servir poques constants.<br />
Costa deduir la utilització de mètodes i variables a partir dels seus noms.<br />
El codi no està sempre ben indentat.
                                            </li>
                                            <li>Deficient(0%):
Mai o quasi bé mai, es fan servir constants.<br />
Costa deduir la utilització de mètodes i variables a partir dels seus noms.<br />
No se segueix un criteri fix a l'hora de nombrar variables, mètodes i classes.<br />
Sovint el codi està mal indentat.</li>
                                        </ul>
                                            
                                        </li>
                                        <li>
                                            Modularitat i estructura del codi (2,5):
                                            <ul>
                                                <li>Correcta(100%)
    El codi es troba distribuït en mètodes, els quals s'agrupen en classes seguint criteris lògics o funcionals.<br/>
    El codi no es concentra  en pocs mètodes o en poques classes sinó que es troba ben distribuït i segmentat en nivells de profunditat raonables per la mida de l'aplicació que ajuda a fer el seguiment del flux.<br/>
    Mai es barreja codi encarregat de calcular i processar les dades   amb l'encarregat d'intercanviar informació amb l'usuari.<br />
    Les estructures de dades ajuden a mantenir les dades agrupades i ben identificades al llarg del codi.<br />
    Hi ha funcions que ajuden a mantenir la coherència de les dades.
                                                </li>
                                                <li>Millorable (50%):
    El codi està estructurat però hi ha poques classes o algunes d'elles concentren bona part del codi.<br/>
    No sempre són evidents els criteris de separació del codi en classes.<br />
    Ocasionalment es barreja codi encarregat de calcular i processar les dades   amb l'encarregat d'intercanviar informació amb l'usuari.<br />
    No sempre es fan servir les estructures de dades i de vegades les dades resten disperses.
                                                </li>
                                                <li>Deficient(0%):
    Hi ha mètodes monolítics que són els responsables d'una part important de la funcionalitat.<br />
    No hi ha criteris identificables de les raons usades per separar el codi en funcions o classes.<br />
    Es difícil de preveure les conseqüències de modificar alguna part del codi.<br />
    Les captures de teclat i les sortides per pantalla es barregen amb la resta processament en gairebé tot el codi.<br />
    Quasi mai es fan servir estructures de dades, treballant amb un nombre gran de variables disperses.
                                                </li>
                                            </ul>
                                            
                                        </li>
                                        <li>
                                            Interfície d'usuari (1,5):
                                            <ul>
                                                <li>Correcta(100%)
    L'usuari sempre sap on es troba i com sortir o tornar a la pantalla anterior.<br />
    Sempre es deixa clar el que l'usuari ha de fer en cada moment.<br />
    Les accions que l'usuari ha de fer són intuïtives o fàcils de deduir.
                                                </li>
                                                <li>Millorable (50%):
    No resulta fàcil saber en quina pantalla es troba l'usuari.<br />
    Malgrat que hi ha missatges orientadors per l'usuari, aquest no sempre clarifiquen el que s'espera que l'usuari faci.
                                                </li>
                                                <li>Deficient(0%):
    No hi ha missatges o els missatges que es mostren no expliquen el que l'usuari ha de fer, cosa que provoca que sovint aquest s'equivoqui.
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                    <p>Si cal, intenteu millorar el projecte seguint els criteris anteriors, abans de fer el lliurament definitiu.</p>
                                </div> 
                            </div>
                        </div>
                    </div>
                </section>
                <!--=========== END SECTION impl 7 ================-->    

