                <!--=========== BEGIN SECTION implementació 2 ================-->    
                <section id="slc-toDo2" class="tasca section">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class= "headSlide">
                                     <h2 >Tasques a realitzar-Implementació II</h2>
                                     <h3 > <span class="tascaTitle">Tasca</span> - Implementació del menú</h3>
                                 </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class=bodySlide>
                                    <p>Sembla que ara si està tot a punt per poder començar a implementar les funcions de l'esquelet que vau esquematitzar a l'activitat A503. Recordeu que les aplicacions escrites en JAVA inicien el flux d'execució a la funció <em>main</em>, la qual, d'acord amb la convenció que hem introduït aquest semestre, crearà una instància de la classe que representa l'aplicació i l'inicialitzarà. Això pot implicar crear i inicialitzar alguna estructura de dades i seguidament, mantenir el flux en el menú principal de l'aplicació fins que l'usuari demani sortir. Cada opció del menú, exceptuant la demanada per finalitzar l'aplicació, es correspondrà amb una tasca, la qual, a la vegada, s'identificarà amb una funció de l'esquelet. Enumereu les diferents opcions i prepareu-vos per definir el menú de l'aplicació fent servir les funcions adients de la biblioteca <em>BibliotecaInterficieUsuari</em>, que vau implementar a l'activitat A504. No us oblideu de la discussió que vau tenir en el fòrum de l'activitat A503 referent a la interfície, el control i el tractament de dades dels menús. Refresqueu sobretot el tema del control i la interfície.</p>
                                    <p>Dissenyeu i implementeu la interfície del menú del projecte seguint les directives referents al disseny d'interfícies que hàgiu extret dels fòrums d'aquesta mateixa activitat. Implementeu també el control que identifiqui la opció escollida per l'usuari i seleccioni, a partir d'aquesta, la tasca a executar. No cal que codifiqueu encara les tasques, limiteu-vos a implementar el menú i el control.</p>
                                    <p>Per tal de poder provar la vostra codificació, implementeu també la funció <em>main</em>, la funció <em>inici</em> i les que necessiteu per fer arribar el flux al menú visualitzar les opcions per la pantalla, seleccionar-ne una via teclat i enviar-la al control. </p>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-clue="#slc-toDo2-clue1">
                                        Pista 1
                                    </button>                                        
                                    <div id="slc-toDo2-clue1" class="iocClue hidden">
                                        <h2>Pista 1</h2>
                                        <p>Recordeu que hi ha d'haver un correspondència entre les opcions del menú i les tasques que vau planificar a l'activitat A503, i que aproximadament seran unes 3 funcionalitats, a banda de l'opció de sortir de l'aplicació.</p>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-warning btn-lg  btn-3d toggle-off" 
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-advice="#slc-toDo2-advice1">
                                        Consell 1
                                    </button>                                        
                                    <div id="slc-toDo2-advice1" class="iocClue hidden">
                                        <h2>Consell 1</h2>
                                        <p>De moment en el control, per comprovar que la opció arriba correctament, poseu una línia amb un <em>System.out.println</em> que us ajudi a veure la opció arribada, Més endavant quan codifiqueu les tasques i li doneu la funcionalitat al control, ja li traureu la línia.</p>
                                        <pre><code class="java">
public class AplicacioExemple {
     public static void main(String[] args) {
         AplicacioExemple prg = new AplicacioExemple();
         prg.inici();
     }
    
    void inici(){
        ...
    }
    
    boolean processarOpcioMenu(char opcio, DadesConfiguracio dades){
        boolean ret=false;
        if(opcio=='1'){
            System.out.println("Opció 1");
        }else if(opcio=='2'){
            System.out.println("Opció 2");
        }else if(opcio=='3'){
            System.out.println("Opció 3");
        }else if(opcio=='0'){
            ret = sortir();
        }
        return ret;
    }
    ...
}
                                        </code></pre>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-warning btn-lg  btn-3d toggle-off" 
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-advice="#slc-toDo2-advice2">
                                        Consell 2
                                    </button>                                        
                                    <div id="slc-toDo2-advice2" class="iocClue hidden">
                                        <h2>Consell 2</h2>
                                        <p>Analitzeu quines dades contenen les diferents estructures de dades que heu dissenyat i plantegeu-vos en quin moment cal crear les instancies de les dades. Algunes necessitareu instanciar-les a l'inici de l'aplicació, però d'altres potser us convé esperar. Sigui com sigui, assegureu-vos que en instanciar les dades, aquestes s'inicien de forma coherent. Recordeu també que un cop creada una instancia, caldrà anar-la passant de crida en crida com a paràmetre per disposar de les dades actualitzades en totes les funcions cridades. Si no ho feu així, i creeu instàncies sempre que en tingueu necessitat, només aconseguireu disseminar per la vostra aplicació armaris buits (sense dades) i per tant sense utilitat.</p>
                                      <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-warning btn-lg  btn-3d toggle-off" 
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo2" 
                                            data-selector-advice="#slc-toDo2-advice3">
                                        Consell 3
                                    </button>                                        
                                    <div id="slc-toDo2-advice3" class="iocAdvice hidden">
                                        <p>Ja hem vist que les estructures de dades, un cop creades, cal anar-les passant per paràmetre, de funció en funció. També hem vist que les classes que només contenen codi, podem instanciar-les tantes vegades com necessitem. No caldrà doncs que passem les seves instàncies per paràmetre, podem crear-les dins de cada funció de forma local. Per exemple, suposant que disposem d'una biblioteca per generar interfícies anomenada <em>InterficieConsola</em> i que l'estructura de dades és EstructuraDades, per poder-les usar a la funció següent, caldrà passar l'estructura per paràmetre i instanciar la interfície com a variable local:</p>
                                        <pre><code class="java">
void funcioExemple(EstructuraDades dades){
    InterficieConsola interficie = new InterficieConsola();
    
    dades.valor = interficie.entrarEnter("Entra el valor actual?");
    
    dades.resultat = calcularResultat(dades);
    
    interfie.mostrarResultat("El resultat obtingut és: " + dades.resultat);
}
                                        </code></pre>
                                        <p>Això a vegades, pot resultar una mica tediós, ja que contínuament cal estar instanciant classes de codi. És possible, però, evitar-ho declarant un única instancia de cada classe contenint només codi, de tipus global, així podrem utilitzar la instancia en qualsevol funció de la classe on es trobi declarada, sense haver de reiterar constantment la mateixa instanciació.</p>
                                        <p>Recordeu, que hem insistit àrduament, dient que eviteu sempre que pugueu l'ús de variables globals. Ara bé, en aquests casos, el fet que la classe instanciada de forma global no contingui dades, fa que sigui indiferent si la instancia és global o local, ja que només la necessitem per executar el codi de les seves funcions.</p>
                                        <p>Aquesta pràctica, però, no està exempta de perills. Un error molt típic de principiant, consisteix en crear instancies globals en dues classes les quals es necessiten una a l'altra. És a dir la primera fa servir funcions de la segona i aquesta, a la vegada fa servir funcions de la primera:</p>
                                        <pre><code class="java">
/*Classe ClassePrincipal que en una de les seves funcions necessita un instància de ClassePrimera.
  La classe  ClassePrincipal està implementada en el fitxer ClassePrincipal.java */
public class ClassePrincipal{
    ...
    public void prova(){
        ClassePrimera codiDeProva = new ClassePrimera()
        
        codiDePRova.executar();
    }
}
                                        
/*Classe ClassePrimera implementada en el fitxer ClassePrimera.java */
public class ClassePrimera{
    public ClasseSegona codiNecessariDeCSegona = new ClasseSegona();
    
    ...
}

/*Classe ClasseSegona implementada en el fitxer ClasseSegona.java */
public class ClasseSegona{
    public ClassePrimera codiNecessariDeCPrimera = new ClassePrimera();
    
    ...
}
                                        </code></pre>
                                        <p>En crear un instància d'una classe, simultàniament, es creen també totes les instancies de les seves variables globals. Com podeu suposar, això és realment un problema per el codi anterior, ja que mai arribaria a executar-se la instrucció <em>codiDePRova.executar();</em>, doncs en intentar crear la instància de ClassePrimera (des de la classe ClassePrincipal), obtindríem un error de desbordament de pila, degut a que la instancia creada, té una variable global de tipus ClasseSegona. Això farà que dins de la instancia de la variable codiDeProva, es crei un instancia de tipus ClasseSegona  (<em>codiDeProva.codiNecessariDeCSegona</em>). Ara bé, la classe ClasseSegona conté també una variable global de tipus ClassePrimera. D'acord amb el que hem explicat, dins la instancia de la classe ClasseSegona es crearà un nova instancia de ClassePrimera que serà diferent a la original, perquè aquesta es troba dins de  <em>codiDeProva.codiNecessariDeCSegona.codiNecessariDeCPrimera</em>. La nova instància contindrà un nova versió de  ClasseSegona i aquesta una nova de la classe ClassePrimera:  <em>codiDeProva.codiNecessariDeCSegona.codiNecessariDeCPrimera.codiNecessariDeCSegona.codiNecessariDeCPrimera</em>. Entrarem així en un bucle infinit que anirà creant instàncies fins esgotar totalment la memòria de l'ordinador, moment en el que obtindrem l'error de desbordament.</p>
                                        <p>Si encara no controleu massa la instanciació de classes, eviteu l'ús de variables globals i malgrat que us representi una mica més de feina, useu només instàncies de tipus local.</p>
                                       <p>D'altra banda, tingueu també present, que les biblioteques amb funcions estàtiques no s'han d'instanciar. Les seves funcions es poden cridar directament anteposant el nom de la classe seguit d'un punt:</p> 
                                       <pre><code class="java">
public class ClassePrincipal{
    ...
    public void prova(){
        BibliotecaEstatica.executarFuncioEstatica();
    }
    
    ...
}
                                       </code></pre>
                                    </div>
                                </div> 
                            </div>
                        </div>
                    </div>
                </section>
                <!--=========== END SECTION implementació 2 ================-->    
                <!--=========== BEGIN SECTION implementació 2 ================-->    
                <section id="slc-toDo3" class="tasca section">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class= "headSlide">
                                     <h2 >Tasques a realitzar-Implementació II</h2>
                                     <h3 > <span class="tascaTitle">Tasca</span> - Implementació de les tasques</h3>
                                 </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class=bodySlide>
                                    <p>Un cop implementat el menú, comenceu la codificació de les tasques. Recordeu que les tasques són funcionalitats complertes i per tant, haureu de contemplar per cada una, la interfície d'usuari necessària per demanar les dades inicials que facin falta i mostrar els resultats obtinguts. Recupereu doncs, els criteris de qualitat que heu analitzat a la <a target='_blank' href="#slc-discussion__slc-discussion24">secció de fòrums</a> i planifiqueu cada una de les pantalles de les tasques. Recordeu que cada una d'elles hauria de disposar de títols específics que donin informació a l'usuari, de la pantalla on es troba. Planifiqueu la informació que caldrà donar a l'usuari a fi que sàpiga sempre el que a de fer i intenteu estandarditzar les pantalles tant com us sigui possible a fi d'homogeneïtzar-les i facilitar l'aprenentatge d'ús.</p>
                                    <p>Ajudeu-vos de la biblioteca que heu creat per generar interfícies d'usuaris. Segur que us pot estalviar molta feina i us evitarà molts, molts errors.</p>
                                    <p>Repasseu també les altres biblioteques que heu anat construint fins avui: les funcions de la classe <em>Utils</em> i les que heu agrupat al gestor de dades (classe GestorDades), segur que us resultaran útils per codificar ràpidament el tractament de dades de la majoria de les tasques.</p>
                                    <p>Si us fixeu bé, veureu que la majoria de funcions corresponents al tractament de dades, les teniu ja implementades les biblioteques esmentades (la classe <em>Utils</em> i el <em>gestor de dades</em>). Per tant, serà el disseny de la interfície d'usuari el que us traurà més temps. Sortosament disposeu també de la classe <em>BibliotecaInterficieUsuari</em> que us facilitarà moltíssim la implementació. Així us podreu concentrar millor en els criteris de qualitat esmentats al fòrum de discussió.</p>
                                    <p>Si durant la codificació us adoneu que us fan falta més funcions de les que vau preveure en la fase de disseny (activitat A503), ja sigui a les classes de l'aplicació o en alguna biblioteca (Utils, interficie d'usuari, etc.), no us preocupeu, podeu implementar-les a mida que les aneu necessitant. Recordeu que la implementació d'aplicacions presenta certa similituds amb la realització d'un trencaclosques però en la implementació, podem emmmotllar les peces a conveniència.</p>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue1">
                                        Pista 1
                                    </button>                                        
                                    <div id="slc-toDo3-clue1" class="iocClue hidden">
                                        <h2>Pista 1</h2>
                                        <p>D'acord amb els criteris de qualitat i el que heu anat deduint en els diferents fòrums un possible esquema per a la implementació de les tasques podria ser el següent exemple.</p>
                                        <pre><code class="java">
...
    void tascaFerAlgunaCosa(DadesAplicacio dades) {
        InterficieUsuari interficieUsuari = new InterficieUsuari();
        int dadaInicial1;
        ...
        String  dadaInicialN;
        int error;
        
        //Pantalla per fer alguna cosa
        interficieUsuari.mostrarTitol("La cosa a fer");
        
        //obtenir dades inicials
        dadaInicial1 = interficieUsuari.entrarEnter("Us demanem que ....");
        
        ...
        
        dataInicialN = interficieUsuari.entrarCadena("Us demanem que ....");
        
        //fer el tractament específic
        error = ferElTractamentPerAlguanCosa(dades, dadaInicial1, ..., dadaInicialN);
        
        //mostrar els resultats del tractament
        if(error==0){
            //tot ha anat correcte. La funció cridada hauria de mostrar els resultats (si cal mostrar-los) i indicar que tot ha anat correctament.
            mostrarMissatgeResultatsPerAlgunaCosa(dades);
        }else{
            //s'ha produït un error. La funció cridada hauria d'analitzar l'error i informar a l'usuari de la raó
            mostrarErrorPerAlgunaCosa(dades, error);
        }
    }
 
 ...
                                        </code></pre>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue2">
                                        Pista 2
                                    </button>                                        
                                    <div id="slc-toDo3-clue2" class="iocClue hidden">
                                        <h2>Pista 2</h2>
                                        <p>En el cas de que s'hagin de mostrar llistes o detalls de dades per la pantalla o textos informatius largs, recordeu-vos de mantenir les dades visibles fins que l'usuari ho indiqui, amb una acció del teclat. Això us permetrà seqüenciar l'aplicació respectant el ritme de l'usuari. Per exemple una possible sortida a la  tasca que mostra l'ajuda podria ser:</p>
                                        <pre class="iocexample single mono">
*********************************************************************************************
**                                        Ajuda                                            **
*********************************************************************************************

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut 
labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco 
laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in 
voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat 
cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque 
laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi 
architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit 
aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem 
sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, 
adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam 
aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam 
corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum 
iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum 
qui dolorem eum fugiat quo voluptas nulla pariatur?

--------------------------------------------------------------------------------
prem 'Entrar' per a continuar
                                        </pre>
                                        <p>Així es mantindria el text en pantalla fins que l'usuari premés la tecla ENTRAR, moment en que s'abandonaria l'escrit i es mostraria de nou el menú.</p>
                                        <p>D'altre banda, per les accions que requereixen que l'usuari vagi entrant dades, com per exemple la demanda de les dades de configuració, n'hi haurà prou d'anar mostrant pregunta a pregunta, i esperant que l'usuari contesti fins arribar a la darrera, moment en que s'abandonarà la pantalla, informant del resultat del procés i es tornarà a mostrar el menú.</p>
                                        <p></p>
                                    </div>
                                    <!-- Button trigger pannel -->
                                    <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue3">
                                        Pista 3
                                    </button>                                        
                                    <div id="slc-toDo3-clue3" class="iocClue hidden">
                                        <h2>Pista 3</h2>
                                        <p>Una seqüenciació que cal esmentar, per la seva complexitat, és la corresponent a la tasca que gestiona el procés de joc. Recordeu que aquest procés , en realitat, està compost de dos processos niats entre si: el procés principal de selecció aleatòria de reptes (paraules a endevinar) del tema indicat a la configuració fins que el jugador es cansi i decideixi finalitzar la sèrie i el procés d'endevinar pròpiament cadascun dels reptes seleccionats.<p>
                                        <p>Inicialment, quan l'usuari opti per la opció de jugar, se seleccionarà una paraula de forma aleatòria (procés principal) i s'iniciarà de forma immediata la pantalla del procés secundari, el d'endevinar la paraula amagada. Recordeu que en aquesta pantalla cal informar a l'usuari de l'estat del joc a més de les dades estadístiques mostrant el nombre de reptes jugats i guanyats fins el moment. També caldria informar a l'usuari del que s'espera que faci. Aproximadament, la pantalla hauria de tenir certa semblança a la següent:</p>
                                        <img class="pantallaJocRepte" alt="pantalla del joc" title="Pantalla del joc de lletres barrejades" width="100%" style="max-width: 800px";/>
                                        <p>La pantalla s'anirà actualitzant d'acord amb la interacció del jugador. És a dir, afegint a la paraula amagada les lletres descobertes, eliminant-les del conjunt de lletres desordenades i actualitzant el nombre d'errades en cas que sigui necessari.</p>
                                        <p>Un cop finalitzat el repte (amb èxit o sense), cal informar a l'usuari del resultat i preguntar si es desitja continuar amb un altre repte o bé es prefereix finalitzar la sèrie i tornar al menú. Potser una pantalla semblant a la següent pot ser adequada:</p>
                                        <img class="pantallaContinuarSerie" alt="pantalla confirmació per seguir jugant" title="Pantalla de a confirmació per seguir amb un altre repte" width="100%" style="max-width: 500px";/>
                                        <p>En cas que l'usuari contesti afirmativament, caldrà repetir el procés principal escollint un nou repte i passar de nou a secundari, iniciant un nou procés d'endevinació a partir de la barreja de lletres.</p>
                                        <p>Per contra, una contesta negativa, informarà al jugador de resultat de la sèrie (inclosa la taxa d'encerts) i mostrarà el menú principal a l'espera d'una ordre del jugador.</p>
                                        <p></p>
                                    </div>
                                    <!-- Button trigger pannel -->
                                     <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue4">
                                        Pista 4
                                    </button>                                        
                                    <div id="slc-toDo3-clue4" class="iocClue hidden">
                                        <h2>Pista 4</h2>
                                        <p>La funció <em>format</em> de la classe <em>String</em>, permet combinar de forma força eficient i senzilla dades de qualsevol tipus amb text. A més permet formatar les dades de manera que sigui possible definir la posició on es desitja que aparegui la dada i la mida que aquesta hauria de tenir. Això us resultarà especialment útil per definir la pantalla amb les dades estadístiques i de l'estat del joc.</p>
                                        <p>Consulteu el <a class="docStringFormat targetBlank">document intern C59</a> on trobareu informació sobre la manera usar aquesta funció, especialment l'apartat on es parla del format lliure. Si ho creieu oportú també podeu consultar l'API de la funció <a class="apiStringFormatUrl targetBlank">String.format()</a>.</p>
                                    </div>
                                    <!-- Button trigger pannel -->
                                     <button type="button" class="btn btn-primary btn-lg btn-toggle toggle-off" 
                                            data-toggle="button"
                                            data-parent-selector="#leftColumnPanel"
                                            data-display-on-set-slide="slc-toDo3" 
                                            data-selector-clue="#slc-toDo3-clue5">
                                        Pista 5
                                    </button>                                        
                                    <div id="slc-toDo3-clue5" class="iocClue hidden">
                                        <h2>Pista 5</h2>
                                        <p>Si durant la implementació us adoneu que, algunes funcions es codifiquen amb només una única crida a una biblioteca, és aconsellable eliminar la funció i cridar directament la biblioteca, des de la tasca original, on s'havia de fer la crida a l'acció.</p>
                                    </div>
                                </div> 
                            </div>
                        </div>
                    </div>
                </section>
                <!--=========== END SECTION implementació 2 ================-->    
                <!--=========== BEGIN SECTION impl 7 ================-->    
                <section id="slc-toDo7" class="tasca section">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-12">
                                <div class= "headSlide">
                                     <h2 >Tasques a realitzar-Implementació II</h2>
                                     <h3 > <span class="tascaTitle">Tasca</span> - Valoració de la implementació</h3>
                                 </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <div class=bodySlide>
                                    <p>Abans de lliurar el projecte us recomanem que feu proves exhaustives per valorar el funcionament de l'aplicació i la seva qualitat.</p>
                                    <p>Les proves funcionals haurien de consistir en provar el bon funcionament de cada una de les funcionalitats (tasques) en que es divideix l'aplicació, aplicant els següents criteris, que d'altra banda seran també els utilitzats per fer la correcció i la qualificació d'acord amb la ponderació expressada a continuació:</p>
                                    <ul>
                                        <li>
                                            Canvi de la configuració de l'aplicació (0,75)
                                            <ul>
                                                <li>Complerta (100%): Es demana per les dues dades variables de la configuració i s'aconsegueixen enregistrar correctament i de forma coherent a l'estructura de dades, usant una interfície que impedeixi l'errada de l'usuari en contestar les opcions de configuració o en el seu defecte verifiqui la correctesa de les dades i avisi si aquestes són incorrectes.</li>
                                                <li>Incomplerta (50%): Les dades s'emmagatzemen correctament, però no es verifiquen les dades o no s'impedeix les respostes errònies o incoherents.</li>
                                                <li>Deficient (0%): Hi ha pèrdua de dades total o parcial. Es perd la coherència a l'estructura de dades.</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Procediment de jugar una sèrie de reptes fins que el jugador decideixi acabar:
                                            <ul>
                                                <li>Procediment de seleccionar els reptes de la sèrie mentre el jugador ho indiqui (0,75)
                                                    <ul>
                                                        <li>Complerta (100%): Mentre l'usuari no indiqui el contrari, se seleccionarà aleatòriament una paraula o grup de paraules, del tema indicat a la configuració i es barrejaran les seves lletres a fi de poder-les mostrar desordenades.</li>
                                                        <li>Incomplerta (50%):El procediment serà tal com indica la opció "complerta" a excepció d'alguna de les següents consideracions:
                                                            <ul>
                                                                <li>Se seleccionarà una paraula o grup de paraules, però no de forma aleatòria o sense tenir en compte el tema indicat a la configuració</li>
                                                                <li>No es barrejaran les lletres de forma aleatòria, de manera que resulti fàcil intuir quin és l'ordre correcte</li>
                                                            </ul>
                                                        <li>Deficient (0%): Apareixen dos o més de les consideracions contemplades a la opció "incomplerta".</li>
                                                    </ul>
                                                </li>
                                                <li> Procediment d'endevinar una paraula amagada (0,75)
                                                   <ul>
                                                        <li>Complerta (100%): Es mostren totes les dades indicades a l'enunciat. S'espera la resposta de l'usuari i es verifica correctament, actualitzat l'estat del joc a cada interacció. Es detecta sempre el moment en que cal finalitzar el procés ja sigui com a conseqüència d'haver superat el nombre d'errors o per haver encertat la paraula.</li>                                                        <li>Incomplerta (50%): Sempre que es compleixin alguna de les següents condicions: es mostren totes les dades indicades a l'enunciat i s'espera la resposta de l'usuari, però la verificació no sempre és correcte i per tant no sempre s'actualitzen les dades de l'estat del joc o no sempre es detecta sempre el moment en que cal finalitzar el procés, ja sigui com a conseqüència de no saber detectar el nombre d'errors o per no reconèixer quan s'ha encertat la paraula.</li>
                                                        <li>Deficient (0%): Sempre que es compleixin més d'una de les condicions indicades a la opció "incomplerta".</li>
                                                    </ul>
                                                </li>
                                            </ul>
                                        </li>
                                        <li>
                                            Mostrar l'ajuda (0,75):
                                            <ul>
                                                <li>Complerta (100%): Es mostra l'ajuda perfectament delimitada a la dimensió de la pantalla .</li>
                                                <li>Poc complerta (65%): Es compleixen tots els ítems de a opció "complerta" a excepció d'un que no està contemplat o no funciona adequadament.</li>
                                                <li>incomplerta (35%): Es compleixen tots els ítems de a opció "complerta" a excepció de 2 o 3 que no estan contemplats o no funcionen adequadament.</li>
                                                <li>Deficient (0%): Hi ha més de 3 dels ítems contemplats a la opció "complerta" que no estan contemplats o no funcionen correctament.</li>
                                            </ul>
                                        </li>
                                        <li>
                                            Altres aspectes a valorar
                                            <ul>
                                                <li>
                                                    Inicialització de l'aplicació i les dades (0,25):
                                                    <ul>
                                                        <li>Complerta (100%): Cada una de les estructures de dades es creen en el moment precís, s'inicialitzen de forma coherent tal com indiquen els requeriments i es fan servir per mantenir les dades durant els processos on calgui, passant-les per paràmetre a les funcions que les necessitin.</li>
                                                        <li>Deficient (0%): No s'implementen tots els ítem indicats a la opció "complerta".</li>
                                                    </ul>
                                                </li>
                                                <li>
                                                    Estructura de dades adequada (0,25)
                                                    <ul>
                                                        <li>Complerta (100%): L''estructura de dades dissenyada per l'alumne es capaç de suportar l'emmagatzematge de les dades que permetin complir tots els requeriments que l'aplicació necessita.</li>
                                                        <li>Incomplerta (50%): L'estructura de dades dissenyada per l'alumne es capaç de suportar l'emmagatzematge de les dades que permetin complir tots els requeriments que l'aplicació necessita a excepció d'un.</li>
                                                        <li>Deficient (0%): L'estructura de dades dissenyada per l'alumne no es capaç de suportar l'emmagatzematge de les dades que permetin complir els requeriments que l'aplicació necessita.</li>
                                                    </ul>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>>
                                    <p>A banda de les proves funcionals, també caldria fer una anàlisi dels criteris de qualitat de més avall, els quals també s'usaran per a calcular la qualificació d'acord amb la ponderació i els criteris definits:</p>
                                    <ul>
                                        <li>
                                            Llegibilitat del codi (2,5):
                                            <ul>
                                                <li>Correcta (100%): Es fan servir constants de forma habitual en lloc de valors literals.<br />
Els noms de les classes, dels mètodes i les variables són descriptius de manera que és molt intuïtiu saber per a què es fan servir.<br/>
El codi està  ben indentat.<br/>
Les estructures de dades ajuden a interpretar el flux de les dades durant l'execució.
                                            </li>
                                            <li>Millorable (50%):
Es fan servir poques constants.<br />
Costa deduir la utilització de mètodes i variables a partir dels seus noms.<br />
El codi no està sempre ben indentat.
                                            </li>
                                            <li>Deficient(0%):
Mai o quasi bé mai, es fan servir constants.<br />
Costa deduir la utilització de mètodes i variables a partir dels seus noms.<br />
No se segueix un criteri fix a l'hora de nombrar variables, mètodes i classes.<br />
Sovint el codi està mal indentat.</li>
                                        </ul>
                                            
                                        </li>
                                        <li>
                                            Modularitat i estructura del codi (2,5):
                                            <ul>
                                                <li>Correcta(100%)
    El codi es troba distribuït en mètodes, els quals s'agrupen en classes seguint criteris lògics o funcionals.<br/>
    El codi no es concentra  en pocs mètodes o en poques classes sinó que es troba ben distribuït i segmentat en nivells de profunditat raonables per la mida de l'aplicació que ajuda a fer el seguiment del flux.<br/>
    Mai es barreja codi encarregat de calcular i processar les dades   amb l'encarregat d'intercanviar informació amb l'usuari.<br />
    Les estructures de dades ajuden a mantenir les dades agrupades i ben identificades al llarg del codi.<br />
    Hi ha funcions que ajuden a mantenir la coherència de les dades.
                                                </li>
                                                <li>Millorable (50%):
    El codi està estructurat però hi ha poques classes o algunes d'elles concentren bona part del codi.<br/>
    No sempre són evidents els criteris de separació del codi en classes.<br />
    Ocasionalment es barreja codi encarregat de calcular i processar les dades   amb l'encarregat d'intercanviar informació amb l'usuari.<br />
    No sempre es fan servir les estructures de dades i de vegades les dades resten disperses.
                                                </li>
                                                <li>Deficient(0%):
    Hi ha mètodes monolítics que són els responsables d'una part important de la funcionalitat.<br />
    No hi ha criteris identificables de les raons usades per separar el codi en funcions o classes.<br />
    Es difícil de preveure les conseqüències de modificar alguna part del codi.<br />
    Les captures de teclat i les sortides per pantalla es barregen amb la resta processament en gairebé tot el codi.<br />
    Quasi mai es fan servir estructures de dades, treballant amb un nombre gran de variables disperses.
                                                </li>
                                            </ul>
                                            
                                        </li>
                                        <li>
                                            Interfície d'usuari (1,5):
                                            <ul>
                                                <li>Correcta(100%)
    L'usuari sempre sap on es troba i com sortir o tornar a la pantalla anterior.<br />
    Sempre es deixa clar el que l'usuari ha de fer en cada moment.<br />
    Les accions que l'usuari ha de fer són intuïtives o fàcils de deduir.
                                                </li>
                                                <li>Millorable (50%):
    No resulta fàcil saber en quina pantalla es troba l'usuari.<br />
    Malgrat que hi ha missatges orientadors per l'usuari, aquest no sempre clarifiquen el que s'espera que l'usuari faci.
                                                </li>
                                                <li>Deficient(0%):
    No hi ha missatges o els missatges que es mostren no expliquen el que l'usuari ha de fer, cosa que provoca que sovint aquest s'equivoqui.
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                    <p>Si cal, intenteu millorar el projecte seguint els criteris anteriors, abans de fer el lliurament definitiu.</p>
                                </div> 
                            </div>
                        </div>
                    </div>
                </section>
                <!--=========== END SECTION impl 7 ================-->    

